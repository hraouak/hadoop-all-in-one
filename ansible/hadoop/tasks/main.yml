---
# tasks file for hadoop
- name: Download hadoop
  shell: wget https://dlcdn.apache.org/hadoop/common/hadoop-3.3.6/hadoop-3.3.6.tar.gz

- name: Extract archive
  shell: tar -xvzf hadoop-3.3.6.tar.gz

- name: Remove archive
  shell: rm hadoop-3.3.6.tar.gz

- name: Rename folder
  shell: sudo mv hadoop-3.3.6 /usr/bin/hadoop

- name: Add JAVA HOME
  environment:
    JAVA_HOME: "/usr/lib/jvm/java-8-openjdk-amd64"
  shell: echo "Setting JAVA_HOME"

- name: Add HADOOP HOME
  environment:
    HADOOP_HOME: "/usr/bin/hadoop"
  shell: echo "Setting HADOOP_HOME"

- name: Add HADOOP INSTALL
  environment:
    HADOOP_INSTALL: "{{ lookup('env', 'HADOOP_HOME') }}"
  shell: echo "Setting HADOOP_INSTALL"

- name: Add HADOOP MAPRED HOME
  environment:
    HADOOP_MAPRED_HOME: "{{ lookup('env', 'HADOOP_HOME') }}"
  shell: echo "Setting HADOOP_MAPRED_HOME"

- name: Add HADOOP COMMON HOME
  environment:
    HADOOP_COMMON_HOME: "{{ lookup('env', 'HADOOP_HOME') }}"
  shell: echo "Setting HADOOP_COMMON_HOME"

- name: Add HADOOP HDFS HOME
  environment:
    HADOOP_HDFS_HOME: "{{ lookup('env', 'HADOOP_HOME') }}"
  shell: echo "Setting HADOOP_HDFS_HOME"

- name: Add HADOOP YARN HOME
  environment:
    HADOOP_YARN_HOME: "{{ lookup('env', 'HADOOP_HOME') }}"
  shell: echo "Setting HADOOP_YARN_HOME"

- name: Add HADOOP COMMON LIB NATIVE DIR
  environment:
    HADOOP_COMMON_LIB_NATIVE_DIR: "{{ lookup('env', 'HADOOP_HOME') }}/lib/native"
  shell: echo "Setting HADOOP_COMMON_LIB_NATIVE_DIR"

- name: Recreate PATH
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ lookup('env', 'HADOOP_HOME') }}/sbin:{{ lookup('env', 'HADOOP_HOME') }}/bin"
  shell: echo "Recreating PATH"

- name: Add HADOOP OPTS
  environment:
    HADOOP_OPTS: "-Djava.library.path={{ lookup('env', 'HADOOP_HOME') }}/lib/native"
  shell: echo "Setting HADOOP_OPTS"

- name: Edit JAVA_HOME in hadoop-env.sh
  vars:
    hadoop_home: "{{ lookup('env', 'HADOOP_HOME') }}"
  shell: sed -i 's/^.*JAVA_HOME=\/.*/JAVA_HOME=\/usr\/lib\/jvm\/java-8-openjdk-amd64/' '{{ hadoop_home }}/etc/hadoop/hadoop-env.sh'

- name: Create Namenode directory
  shell: mkdir -p ~/hadoopdata/hdfs/namenode

- name: Create Datanode directory
  shell: mkdir -p ~/hadoopdata/hdfs/datanode

- name: Delete old config of core-site.xml
  vars:
    hadoop_home: "{{ lookup('env', 'HADOOP_HOME') }}"
  shell: head -n -2 "{{ hadoop_home }}/etc/hadoop/core-site.xml" > temp_core_site.xml && mv temp_core_site.xml "{{ hadoop_home }}/etc/hadoop/core-site.xml"

- name: Add new config to core-site.xml
  vars:
    actual_hostname: "{{ ansible_hostname }}"
    hadoop_home: "{{ lookup('env', 'HADOOP_HOME') }}"
  blockinfile:
    path: "{{ hadoop_home }}/etc/hadoop/core-site.xml"
    marker: ""
    block: |
      <configuration>
        <property>
          <name>fs.defaultFS</name>
          <value>hdfs://{{ actual_hostname }}:9000</value>
        </property>
      </configuration>

- name: Delete old config of hdfs-site.xml
  vars:
    hadoop_home: "{{ lookup('env', 'HADOOP_HOME') }}"
  shell: head -n -3 "{{ hadoop_home }}/etc/hadoop/hdfs-site.xml" > temp_hdfs_site.xml && mv temp_hdfs_site.xml "{{ hadoop_home }}/etc/hadoop/hdfs-site.xml"

- name: Add new config to hdfs-site.xml
  vars:
    hadoop_home: "{{ lookup('env', 'HADOOP_HOME') }}"
  blockinfile:
    path: "{{ hadoop_home }}/etc/hadoop/hdfs-site.xml"
    marker: ""
    block: |
      <configuration>
          <property>
          <name>dfs.replication</name>
          <value>1</value>
        </property>
        <property>
          <name>dfs.namenode.name.dir</name>
          <value>file:///home/ubuntu/hadoopdata/hdfs/namenode</value>
        </property>
        <property>
          <name>dfs.datanode.data.dir</name>
          <value>file:///home/ubuntu/hadoopdata/hdfs/datanode</value>
        </property>
      </configuration>

- name: Delete old config of mapred-site.xml
  vars:
    hadoop_home: "{{ lookup('env', 'HADOOP_HOME') }}"
  shell: head -n -3 "{{ hadoop_home }}/etc/hadoop/mapred-site.xml" > temp_mapred_site.xml && mv temp_mapred_site.xml "{{ hadoop_home }}/etc/hadoop/mapred-site.xml"

- name: Add new config to mapred-site.xml
  vars:
    hadoop_home: "{{ lookup('env', 'HADOOP_HOME') }}"
  blockinfile:
    path: "{{ hadoop_home }}/etc/hadoop/mapred-site.xml"
    marker: ""
    block: |
      <configuration>
        <property>
          <name>yarn.app.mapreduce.am.env</name>
          <value>HADOOP_MAPRED_HOME=/usr/bin/hadoop/bin/hadoop</value>
        </property>
        <property>
          <name>mapreduce.map.env</name>
          <value>HADOOP_MAPRED_HOME=/usr/bin/hadoop/bin/hadoop</value>
        </property>
        <property>
          <name>mapreduce.reduce.env</name>
          <value>HADOOP_MAPRED_HOME=/usr/bin/hadoop/bin/hadoop</value>
        </property>
      </configuration>

- name: Delete old config of yarn-site.xml
  vars:
    hadoop_home: "{{ lookup('env', 'HADOOP_HOME') }}"
  shell: head -n -5 "{{ hadoop_home }}/etc/hadoop/yarn-site.xml" > temp_yarn_site.xml && mv temp_yarn_site.xml "{{ hadoop_home }}/etc/hadoop/yarn-site.xml"

- name: Add new config to yarn-site.xml
  vars:
    hadoop_home: "{{ lookup('env', 'HADOOP_HOME') }}"
  blockinfile:
    path: "{{ hadoop_home }}/etc/hadoop/yarn-site.xml"
    marker: ""
    block: |
      <configuration>
        <property>
          <name>yarn.nodemanager.aux-services</name>
          <value>mapreduce_shuffle</value>
        </property>
      </configuration>
